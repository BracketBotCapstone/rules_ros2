""" Builds rcutils.
"""

load(
    "@com_github_mvukov_rules_ros2//repositories:generate_logging_macros.bzl",
    "logging_macros",
)
load("@rules_ros2_pip_deps//:requirements.bzl", "requirement")

_GENERATE_LOGGING_MACROS_PY = "@com_github_mvukov_rules_ros2//repositories:generate_logging_macros.py"

py_library(
    name = "logging_generator",
    srcs = ["rcutils/logging.py"],
    deps = [requirement("empy")],
    visibility = ["//visibility:public"],
)

py_binary(
    name = "generate_logging_macros",
    srcs = [_GENERATE_LOGGING_MACROS_PY],
    main = _GENERATE_LOGGING_MACROS_PY,
    deps = [
        ":logging_generator",
        requirement("empy"),
    ],
)

logging_macros(
    name = "logging_macros",
    output = "include/rcutils/logging_macros.h",
    template = "resource/logging_macros.h.em",
    generator = ":generate_logging_macros",
)

cc_library(
    name = "rcutils",
    hdrs = glob(["include/**/*.h"]) + [":logging_macros"],
    includes = ["include"],
    local_defines = select({
        "@platforms//os:linux": ["_GNU_SOURCE"],
        "//conditions:default": [],
    }),
    srcs = glob(["src/*.c", "src/*.h"], exclude = ["src/time_*.c"]) + select({
        "@platforms//os:linux": ["src/time_unix.c"],
        "@platforms//os:macos": ["src/time_unix.c"],
    }, no_match_error = "Only Linux and macOS are supported!"),
    linkopts = select({
        "@platforms//os:linux": ["-ldl"],
        "@platforms//os:macos": ["-ldl"],
    }, no_match_error = "Only Linux and macOS are supported!"),
    visibility = ["//visibility:public"],
)
